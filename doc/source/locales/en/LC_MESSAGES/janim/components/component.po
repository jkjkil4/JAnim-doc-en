# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, jkjkil4
# This file is distributed under the same license as the JAnim package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#

#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: JAnim\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-01-19 18:35+0800\n"
"PO-Revision-Date: 2024-01-19 19:53+0800\n"
"Last-Translator: \n"
"Language-Team: en <LL@li.org>\n"
"Language: en\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.14.0\n"
"X-Generator: Poedit 3.4.2\n"

#: ../../source/janim/components/component.rst:2
msgid "component"
msgstr "component"

#: ../../source/rst_utils/tip_of_complex.rst:1
msgid "**提示：这部分内容涉及 JAnim 实现原理，可能较为复杂，若没有研究源码的需求，你应酌情阅读**"
msgstr "**Tips: This section covers the implementations of JAnim, which may be quite complex. If you do not have the need to delve into the source code, you may choose to read it at your discretion.**"

#: janim.components.component.Component:1 of
msgid "基类：:py:class:`~janim.utils.refresh.Refreshable`"
msgstr "基类：:py:class:`~janim.utils.refresh.Refreshable`"

#: janim.components.component.Component.BindInfo:1 of
msgid "基类：:py:class:`object`"
msgstr "基类：:py:class:`object`"

#: janim.components.component.Component.BindInfo:1 of
msgid "对组件定义信息的封装"
msgstr "Encapsulation of component definition information"

#: janim.components.component.Component.BindInfo:3 of
msgid "``decl_cls``: 以 ``xxx = CmptInfo(...)`` 的形式被声明在哪个类中； 如果一个类及其父类都有 ``xxx = CmptInfo(...)`` ，那么 ``decl_cls`` 是父类"
msgstr "``decl_cls``: In which class the component is declared as ``xxx = CmptInfo(...)``; If a class and its parent class both have ``xxx = CmptInfo(...)`` , then ``decl_cls`` is the parent class"

#: janim.components.component.Component.BindInfo:5 of
msgid "``at_item``: 这个组件对象是属于哪个物件对象的"
msgstr "``at_item``: To which item object this component object belongs"

#: janim.components.component.Component.BindInfo:6 of
msgid "``key``: 这个组件对象的变量名"
msgstr "``key``: The variable name of this component object"

#: janim.components.component.CmptGroup:3 janim.components.component.CmptInfo:3
#: janim.components.component.Component.BindInfo:8 of
msgid "例："
msgstr "For example:"

#: janim.components.component.Component.init_bind:1 of
msgid "用于 ``Item._init_components``"
msgstr "Used for ``Item._init_components``"

#: janim.components.component.Component.init_bind:3 of
msgid "子类可以继承该函数，进行与所在物件相关的处理"
msgstr "Subclasses can inherit this function to perform item-related processing"

#: janim.components.component.Component.mark_refresh:1 of
msgid "详见： :meth:`~.Item.broadcast_refresh_of_component`"
msgstr "See  :meth:`~.Item.broadcast_refresh_of_component`"

#: janim.components.component.CmptInfo:1 of
msgid "基类：:py:class:`~typing.Generic`"
msgstr "基类：:py:class:`~typing.Generic`"

#: janim.components.component.CmptInfo:1 of
msgid "在类中定义组件需要使用该类"
msgstr "When defining components in a class, you should use this class to wrap"

#: janim.components.component.CmptGroup:1 of
msgid "用于将多个组件打包，使得可以同时调用"
msgstr "Used to package multiple components, allowing them to be called simultaneously"

#~ msgid ""
#~ "**Tips: This section covers the "
#~ "implementations of JAnim, which may be"
#~ " quite complex. If you do not "
#~ "have the need to delve into the"
#~ " source code, you may choose to "
#~ "read it at your discretion.**"
#~ msgstr ""

#~ msgid "**提示：这部分内容涉及 JAnim 实现原理，可能较为复杂，若没有研究源码的需求，你应酌情阅读**"
#~ msgstr ""

#~ msgid "**_(\"提示：这部分内容涉及 JAnim 实现原理，可能较为复杂，若没有研究源码的需求，你应酌情阅读\")**"
#~ msgstr ""

#~ msgid "_(\"**提示：这部分内容涉及 JAnim 实现原理，可能较为复杂，若没有研究源码的需求，你应酌情阅读**\")"
#~ msgstr ""

#~ msgid "详见 | See: :meth:`~.Item.broadcast_refresh_of_component`"
#~ msgstr ""

#~ msgid "例如 | Example："
#~ msgstr ""

#~ msgid "例 | Example:"
#~ msgstr ""
